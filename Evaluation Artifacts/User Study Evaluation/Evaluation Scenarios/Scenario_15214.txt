Evaluation ID:15214
Application Category:music
Your Method's Feature Description: search for song
-------------------------------------------------------
Your Method's Body: 
    /**
     * Create a Search Chooser
     */
    public static void doSearch(Context mContext, Cursor mCursor, String Type) {
        CharSequence title = null;
        Intent i = new Intent();
        i.setAction(MediaStore.INTENT_ACTION_MEDIA_SEARCH);
        i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        String query = "";

    	if ( Type == TYPE_ALBUM ){
    		query = mCursor.getString(mCursor.getColumnIndexOrThrow(AlbumColumns.ALBUM));
    	}
    	else if( Type == TYPE_ARTIST ){
    		query = mCursor.getString(mCursor.getColumnIndexOrThrow(ArtistColumns.ARTIST));
    	}
    	else if( Type == TYPE_GENRE ||  Type == TYPE_PLAYLIST ||  Type == TYPE_SONG ){
    		query = mCursor.getString(mCursor.getColumnIndexOrThrow(MediaColumns.TITLE));
    	}
        title = "";
        i.putExtra("", query);
        title = title + " " + query;
        title = "Search " + title;
        i.putExtra(SearchManager.QUERY, query);
        mContext.startActivity(Intent.createChooser(i, title));
    }
-------------------------------------------------------
Your Method's API calls:
Cursor.getString
Cursor.getColumnIndexOrThrow
Context.startActivity
======================================
Related Methods:
======================================
-------------------------------------------------------
Recommendation No. 1
-------------------------------------------------------
        private boolean setDataSourceImpl(MediaPlayer player, String path) {
            try {
                player.reset();
                player.setOnPreparedListener(null);
                if (path.startsWith("content://")) {
                    player.setDataSource(ApolloService.this, Uri.parse(path));
                } else {
                    player.setDataSource(path);
                }
                player.setAudioStreamType(AudioManager.STREAM_MUSIC);
                player.prepare();
            } catch (IOException ex) {
                return false;
            } catch (IllegalArgumentException ex) {
                return false;
            }
            player.setOnCompletionListener(listener);
            player.setOnErrorListener(errorListener);
            Intent i = new Intent(AudioEffect.ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION);
            i.putExtra(AudioEffect.EXTRA_AUDIO_SESSION, getAudioSessionId());
            i.putExtra(AudioEffect.EXTRA_PACKAGE_NAME, getPackageName());
            sendBroadcast(i);
            Intent intent = new Intent(AudioEffect.ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL);
    	    if (getPackageManager().resolveActivity(intent, 0) == null) {
    	    	MusicUtils.initEqualizer( player , getApplicationContext());
    	    }    	                                
            SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
            String type = sp.getString(VISUALIZATION_TYPE, getResources().getString(R.string.visual_none));                    
    	    if(!type.equals(getResources().getString(R.string.visual_none))){
        	    VisualizerUtils.initVisualizer( player );
            }
            return true;
        }
-------------------------------------------------------
Method API calls:
MediaPlayer.reset
MediaPlayer.setOnPreparedListener
String.startsWith
MediaPlayer.setDataSource
Uri.parse
MediaPlayer.setAudioStreamType
MediaPlayer.prepare
MediaPlayer.setOnCompletionListener
MediaPlayer.setOnErrorListener
PreferenceManager.getDefaultSharedPreferences
SharedPreferences.getString
String.equals
-------------------------------------------------------
Recommendation No. 2
-------------------------------------------------------
            @Override
            public boolean onError(MediaPlayer mp, int what, int extra) {
                switch (what) {
                    case MediaPlayer.MEDIA_ERROR_SERVER_DIED:
                        mIsInitialized = false;
                        mCurrentMediaPlayer.release();
                        // Creating a new MediaPlayer and settings its wakemode
                        // does not
                        // require the media service, so it's OK to do this now,
                        // while the
                        // service is still being restarted
                        mCurrentMediaPlayer = new MediaPlayer();
                        mCurrentMediaPlayer
                                .setWakeMode(ApolloService.this, PowerManager.PARTIAL_WAKE_LOCK);
                        mHandler.sendMessageDelayed(mHandler.obtainMessage(SERVER_DIED), 2000);
                        return true;
                    default:
                        Log.d("MultiPlayer", "Error: " + what + "," + extra);
                        break;
                }
                return false;
            }
-------------------------------------------------------
Method API calls:
MediaPlayer.release
MediaPlayer.new
MediaPlayer.setWakeMode
Handler.sendMessageDelayed
Handler.obtainMessage
-------------------------------------------------------
Recommendation No. 3
-------------------------------------------------------
        @Override
        public void bindView(View view, Context context, Cursor cursor) {

            TextView tv1 = (TextView)view.findViewById(R.id.listview_item_line_one);
            tv1.setTextColor(Color.BLACK);
            TextView tv2 = (TextView)view.findViewById(R.id.listview_item_line_two);
            tv2.setTextColor(Color.BLACK);
            ImageView iv = (ImageView)view.findViewById(R.id.listview_item_image);
            iv.setVisibility(View.GONE);
            FrameLayout fl = (FrameLayout)view.findViewById(R.id.track_list_context_frame);
            fl.setVisibility(View.GONE);
            ViewGroup.LayoutParams p = iv.getLayoutParams();
            if (p == null) {
                // seen this happen, not sure why
                DatabaseUtils.dumpCursor(cursor);
                return;
            }
            p.width = ViewGroup.LayoutParams.WRAP_CONTENT;
            p.height = ViewGroup.LayoutParams.WRAP_CONTENT;

            String mimetype = cursor.getString(cursor.getColumnIndexOrThrow(Audio.Media.MIME_TYPE));

            if (mimetype == null) {
                mimetype = "audio/";
            }
            if (mimetype.equals("artist")) {
                String name = cursor.getString(cursor.getColumnIndexOrThrow(Audio.Artists.ARTIST));
                String displayname = name;
                boolean isunknown = false;
                if (name == null || name.equals(MediaStore.UNKNOWN_STRING)) {
                    displayname = context.getString(R.string.unknown);
                    isunknown = true;
                }
                tv1.setText(displayname);

                int numalbums = cursor.getInt(cursor.getColumnIndexOrThrow("data1"));
                int numsongs = cursor.getInt(cursor.getColumnIndexOrThrow("data2"));

                String songs_albums = MusicUtils.makeAlbumsLabel(context, numalbums, numsongs,
                        isunknown);

                tv2.setText(songs_albums);

            } else if (mimetype.equals("album")) {
                String name = cursor.getString(cursor.getColumnIndexOrThrow(Audio.Albums.ALBUM));
                String displayname = name;
                if (name == null || name.equals(MediaStore.UNKNOWN_STRING)) {
                    displayname = context.getString(R.string.unknown);
                }
                tv1.setText(displayname);

                name = cursor.getString(cursor.getColumnIndexOrThrow(Audio.Artists.ARTIST));
                displayname = name;
                if (name == null || name.equals(MediaStore.UNKNOWN_STRING)) {
                    displayname = context.getString(R.string.unknown);
                }
                tv2.setText(displayname);

            } else if (mimetype.startsWith("audio/") || mimetype.equals("application/ogg")
                    || mimetype.equals("application/x-ogg")) {
                String name = cursor.getString(cursor.getColumnIndexOrThrow(Audio.Media.TITLE));
                tv1.setText(name);

                String displayname = cursor.getString(cursor
                        .getColumnIndexOrThrow(Audio.Artists.ARTIST));
                if (displayname == null || displayname.equals(MediaStore.UNKNOWN_STRING)) {
                    displayname = context.getString(R.string.unknown);
                }
                name = cursor.getString(cursor.getColumnIndexOrThrow(Audio.Albums.ALBUM));
                if (name == null || name.equals(MediaStore.UNKNOWN_STRING)) {
                    name = context.getString(R.string.unknown);
                }
                tv2.setText(displayname + " - " + name);
            }
        }
-------------------------------------------------------
Method API calls:
View.findViewById
TextView.setTextColor
ImageView.setVisibility
FrameLayout.setVisibility
ImageView.getLayoutParams
DatabaseUtils.dumpCursor
Cursor.getString
Cursor.getColumnIndexOrThrow
String.equals
Context.getString
TextView.setText
Cursor.getInt
String.startsWith
-------------------------------------------------------
Recommendation No. 4
-------------------------------------------------------
    /**
     * @param context
     * @param numalbums
     * @param numsongs
     * @param isUnknown
     * @return a string based on the number of albums for an artist or songs for
     *         an album
     */
    public static String makeAlbumsLabel(Context mContext, int numalbums, int numsongs,
            boolean isUnknown) {

        StringBuilder songs_albums = new StringBuilder();

        Resources r = mContext.getResources();
        if (isUnknown) {
            String f = r.getQuantityText(R.plurals.Nsongs, numsongs).toString();
            sFormatBuilder.setLength(0);
            sFormatter.format(f, Integer.valueOf(numsongs));
            songs_albums.append(sFormatBuilder);
            songs_albums.append("\n");
        } else {
            String f = r.getQuantityText(R.plurals.Nalbums, numalbums).toString();
            sFormatBuilder.setLength(0);
            sFormatter.format(f, Integer.valueOf(numalbums));
            songs_albums.append(sFormatBuilder);
            songs_albums.append("\n");
        }
        return songs_albums.toString();
    }
-------------------------------------------------------
Method API calls:
StringBuilder.new
Context.getResources
Resources.getQuantityText
StringBuilder.setLength
Formatter.format
Integer.valueOf
StringBuilder.append
StringBuilder.toString
-------------------------------------------------------
Recommendation No. 5
-------------------------------------------------------
    /**
     * @param context
     * @param secs
     * @return time String
     */
    public static String makeTimeString(Context context, long secs) {

        String durationformat = context.getString(secs < 3600 ? R.string.durationformatshort
                : R.string.durationformatlong);

        /*
         * Provide multiple arguments so the format can be changed easily by
         * modifying the xml.
         */
        sFormatBuilder.setLength(0);

        final Object[] timeArgs = sTimeArgs;
        timeArgs[0] = secs / 3600;
        timeArgs[1] = secs / 60;
        timeArgs[2] = secs / 60 % 60;
        timeArgs[3] = secs;
        timeArgs[4] = secs % 60;

        return sFormatter.format(durationformat, timeArgs).toString();
    }
-------------------------------------------------------
Method API calls:
Context.getString
StringBuilder.setLength
Formatter.format
